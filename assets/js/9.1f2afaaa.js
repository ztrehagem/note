(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{253:function(t,s,e){"use strict";e.r(s);var a=e(28),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"firebase-vue-js-覚書"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#firebase-vue-js-覚書"}},[t._v("#")]),t._v(" Firebase+Vue.js 覚書")]),t._v(" "),e("h2",{attrs:{id:"まえがき"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#まえがき"}},[t._v("#")]),t._v(" まえがき")]),t._v(" "),e("p",[t._v('"'),e("a",{attrs:{href:"https://teikyou.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("テイキョウドットコム"),e("OutboundLink")],1),t._v('"の裏側のCMSをFirebaseで作った話．\nしばらくフレームワークとしてNuxt.jsを使っていたものの，'),e("code",[t._v('lang="ts"')]),t._v("にしようとしていろいろ躓いたりして面倒だったので，流行り（？）の"),e("code",[t._v("@vue/cli")]),t._v("に全部任せることにした．もうSSRはいいかな．")]),t._v(" "),e("p",[t._v("でもクライアントもサーバ(Firebase Functions)もTypeScriptで書けたらいいじゃん．良いじゃん（断定）")]),t._v(" "),e("p",[t._v("そのうちNuxt.js+TypeScriptちゃんと研究しよ．\nNuxt.jsすき．")]),t._v(" "),e("h2",{attrs:{id:"firebase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#firebase"}},[t._v("#")]),t._v(" Firebase")]),t._v(" "),e("p",[t._v("まずfirebase-toolsで")]),t._v(" "),e("div",{staticClass:"language-console extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("~/ $ firebase init\n")])])]),e("p",[t._v("今回はHosting, Functions, Firestore, Authenticationを使う")]),t._v(" "),e("p",[t._v("ディレクトリ構造はこう")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("~/\n|- functions/   --- Functionsのコード\n|  |- src/         --- .tsファイル群\n|  |- lib/         --- コンパイル済み.jsファイル群\n|  |- package.json\n|     ...\n|- src/         --- クライアント側のコード\n|  |- common/\n|  |- site_name/     --- vue cliで作るディレクトリ\n|  |  |- package.json\n|  |     ...\n|  `- site_name_2/   --- vue cliで作るディレクトリ\n|     |- package.json\n|        ...\n|- public/      --- クライアント側ビルド済みファイル\n|  |- site_name/\n|  `- site_name_2/\n|- .firebaserc\n|- firebase.json\n|- package.json\n   ...\n")])])]),e("h3",{attrs:{id:"hosting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hosting"}},[t._v("#")]),t._v(" Hosting")]),t._v(" "),e("p",[t._v('表側と裏側の2サイトを用意するので従量プランにアップグレード．\nその上で"'),e("a",{attrs:{href:"https://firebase.google.com/docs/hosting/multisites?hl=ja",target:"_blank",rel:"noopener noreferrer"}},[t._v("複数のサイトでプロジェクトのリソースを共有する"),e("OutboundLink")],1),t._v('"の通りに，Hostingサイトと'),e("code",[t._v("~/public/site_name")]),t._v('を関連付ける．\nまた，SPAの場合すべてのURLリクエストをindex.htmlに飛ばす必要がある．"'),e("a",{attrs:{href:"https://firebase.google.com/docs/hosting/url-redirects-rewrites?hl=ja",target:"_blank",rel:"noopener noreferrer"}},[t._v("Hosting 動作をカスタマイズする"),e("OutboundLink")],1),t._v('"の"リライト"の項など参考に各target毎に設定を行う．\nこんな感じ．')]),t._v(" "),e("ul",[e("li",[t._v("~/firebase.json"),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[t._v("  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hosting"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"target"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"target_name"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"public"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"public/site_name"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rewrites"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"source"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"**"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"destination"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/index.html"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])])])]),t._v(" "),e("p",[t._v("vue cliの項に続く．")]),t._v(" "),e("h3",{attrs:{id:"authentication"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#authentication"}},[t._v("#")]),t._v(" Authentication")]),t._v(" "),e("p",[t._v("方式はとりあえずメール+パスワード認証にした．あとでGoogleアカウントにしよ．\nFirebase Consoleからユーザを作成（CMSを利用するのは限定人数なので）\n実際に使えるメールアドレスと，仮の適当なパスワードで作る．\nパスワード再設定用メール送信で実際のパスワードを設定させると同時にメール認証が完了する．")]),t._v(" "),e("h3",{attrs:{id:"firestore"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#firestore"}},[t._v("#")]),t._v(" Firestore")]),t._v(" "),e("p",[t._v("Firebase Consoleから作成しておく．ロックモードでよい．\nFirestoreのreadは全員許可，writeを前項で作ったユーザのみに限定する．\nルールを以下のようにする．uidはユーザを作った時に発行されるやつ．\n複数許可したり，emailで絞ることもできる．詳しくはドキュメント参照されたし．")]),t._v(" "),e("ul",[e("li",[t._v("~/firestore.rules"),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("...\nallow read;\nallow write:\n  if request.auth.token.email_verified\n  && request.auth.uid in [\n    'XXXXXXXXXXXXXXXXXXXXXXXXXXXX',\n    'YYYYYYYYYYYYYYYYYYYYYYYYYYYY'\n  ];\n...\n")])])])])]),t._v(" "),e("p",[t._v("複数fieldを使ったソートのクエリを使う必要があったので，indexを作成しておく．")]),t._v(" "),e("h3",{attrs:{id:"functions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[t._v("#")]),t._v(" Functions")]),t._v(" "),e("p",[t._v("functionいっぱい作ってREST APIみたいにするとそれぞれのfunctionの起動に時間がかかるっぽいので、1つのfunctionにexpressを載せる構成にした。\nexpressのようなFunctionsだけの依存ライブラリは"),e("code",[t._v("~/functions/package.json")]),t._v("にインストールしよう．")]),t._v(" "),e("h2",{attrs:{id:"vue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[t._v("#")]),t._v(" Vue")]),t._v(" "),e("div",{staticClass:"language-console extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("~/src $ vue create site_name\n")])])]),e("p",[t._v("TypeScriptを使う設定にした．その他お好み．\nこれをサイト数ぶん作る．")]),t._v(" "),e("p",[t._v("pugを使う場合は追加で")]),t._v(" "),e("div",{staticClass:"language-console extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("~/src/site_name $ npm i -D pug pug-plain-loader\n")])])]),e("p",[t._v('Firebase Consoleのoverviewにある"'),e("em",[t._v("アプリにFirebaseを追加して利用を開始しましょう")]),t._v('"から，initializaAppするために必要な値を確認し，'),e("code",[t._v(".env")]),t._v("を以下のように設定．\n"),e("code",[t._v(".env")]),t._v("の仕様の詳細はドキュメント参照されたし")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("~/src/site_name/.env.production")]),t._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("VUE_APP_FIREBASE_FUNCTIONS_URL=https://region-name-project-id.cloudfunctions.net/\n\nVUE_APP_FIREBASE_API_KEY=xxx\nVUE_APP_FIREBASE_AUTH_DOMAIN=project-id.firebaseapp.com\nVUE_APP_FIREBASE_DATABASE_URL=https://project-id.firebaseio.com\nVUE_APP_FIREBASE_PROJECT_ID=project-id\nVUE_APP_FIREBASE_STORAGE_BUCKET=project-id.appspot.com\nVUE_APP_FIREBASE_MESSAGING_SENDER_ID=xxx\n...\n")])])])]),t._v(" "),e("li",[e("p",[t._v("~/src/site_name/.env.development")]),t._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("VUE_APP_FIREBASE_FUNCTIONS_URL=http://localhost:5001/project-id/us-central1/\n\nおなじ\n...\n")])])])])]),t._v(" "),e("p",[e("code",[t._v("$ firebase serve")]),t._v("でローカルで動かすとき，Firestoreだけはローカルで立たないので，"),e("code",[t._v(".env.development")]),t._v("では予め用意したstaging用のFirebaseプロジェクトを使うようにすると◎．（その場合Firestoreだけ使うのでstaging用プロジェクトの料金プランアップグレードは不要）")]),t._v(" "),e("p",[e("code",[t._v(".env")]),t._v("で設定したもののうち"),e("code",[t._v("VUE_APP_")]),t._v("で始まるものは以下のようにクライアントサイドのコードで呼び出せるのでそうなっている．")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("process.env.VUE_APP_XXX")])]),t._v(" "),e("li",[e("code",[t._v("<%= VUE_APP_XXX %>")]),t._v(" ("),e("code",[t._v("~/src/site_name/public/index.html")]),t._v("など)")])]),t._v(" "),e("p",[t._v("headのmetaでcanonical urlが欲しいときは"),e("code",[t._v("VUE_APP_PUBLIC_PATH")]),t._v("など設定しておくと◎．")]),t._v(" "),e("p",[t._v("そして最後にこう")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("firebase.ts")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" config "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  apiKey"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VUE_APP_FIREBASE_API_KEY")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  authDomain"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VUE_APP_FIREBASE_AUTH_DOMAIN")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  databaseURL"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VUE_APP_FIREBASE_DATABASE_URL")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  projectId"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VUE_APP_FIREBASE_PROJECT_ID")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  storageBucket"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VUE_APP_FIREBASE_STORAGE_BUCKET")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  messagingSenderId"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VUE_APP_FIREBASE_MESSAGING_SENDER_ID")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nfirebase"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("initializeApp")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("axios.ts")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" axios "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'axios'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" axios"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  baseURL"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VUE_APP_FIREBASE_FUNCTIONS_URL")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),e("h2",{attrs:{id:"build-serve-deploy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#build-serve-deploy"}},[t._v("#")]),t._v(" Build, Serve, Deploy")]),t._v(" "),e("p",[t._v("npm scriptだけ列挙する")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("~/functions/package.json")]),t._v(" "),e("div",{staticClass:"language-json: extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('    "build": "tsc",\n    "watch": "tsc -w",\n')])])])]),t._v(" "),e("li",[e("p",[t._v("~/src/site_name/package.json")]),t._v(" "),e("div",{staticClass:"language-json: extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('    "build": "vue-cli-service build --dest=../../public/site_name --mode=development",\n    "watch": "vue-cli-service build --dest=../../public/site_name --mode=development --watch",\n    "prod": "vue-cli-service build --dest=../../public/site_name --mode=production",\n')])])])]),t._v(" "),e("li",[e("p",[t._v("~/package.json")]),t._v(" "),e("div",{staticClass:"language-json: extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('    "build": "run-s build:*",\n    "build:functions": "npm --prefix=functions run build",\n    "build:site_name": "npm --prefix=src/site_name run build",\n    "build:site_name_2": "npm --prefix=src/site_name_2 run build",\n    "serve": "firebase serve --project project-id-staging",\n    "prod:site_name": "npm --prefix=src/site_name run prod",\n    "prod:site_name_2": "npm --prefix=src/site_name_2 run prod",\n    "predeploy": "run-s clean prod:*",\n    "deploy": "firebase deploy --project project-id",\n    "clean": "rm -r public || true",\n')])])])])]),t._v(" "),e("p",[t._v("開発中は"),e("code",[t._v("npm run watch")]),t._v("を各package.jsonの位置で実行する．またはルートで"),e("code",[t._v("npm run build")]),t._v("．\nその後ルートで"),e("code",[t._v("npm run serve")]),t._v("でFirebase Hostingがローカルで動く．\n"),e("code",[t._v("npm run deploy")]),t._v("で全部productionビルドしてデプロイする．Functionsはfirebase-toolsが勝手にビルドします．\n"),e("code",[t._v("npm run deploy -- --only functions")]),t._v("とかも可能．詳しくはfirebase-toolsのドキュメント参照されたし")]),t._v(" "),e("p",[e("code",[t._v("run-s")]),t._v("は"),e("code",[t._v("npm-run-all")]),t._v("パッケージ")]),t._v(" "),e("h2",{attrs:{id:"蛇足"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#蛇足"}},[t._v("#")]),t._v(" 蛇足")]),t._v(" "),e("h3",{attrs:{id:"alias-vs-symlink"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#alias-vs-symlink"}},[t._v("#")]),t._v(" alias vs symlink")]),t._v(" "),e("p",[t._v("複数サイト間やVue・Functions間でinterfaceの定義を共有したかったりする．\ntsconfig.jsonのpathsで"),e("code",[t._v('"@common/*": ["../../comon/*"]')]),t._v("とするか，\nシンボリックリンク"),e("code",[t._v("ln -s ../../common ./common")]),t._v("とするか，\nどっちがいいんだろうか？")]),t._v(" "),e("p",[t._v("どちらにせよ実体がtsconfig.jsonやtslint.json/eslint.jsonの外側ディレクトリにあるので，\nlintはかからないしwatchしてくれない・・・？")]),t._v(" "),e("h3",{attrs:{id:"vscode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vscode"}},[t._v("#")]),t._v(" VSCode")]),t._v(" "),e("p",[t._v("プロジェクトルートから見てtsconfigが複数あるので，paths解決やインテリセンス等々を上手にやってくれない．\ntsconfigの位置毎にVSCodeを複窓して書いてるけどめんどくさいぞ！\nいい方法教えてください．")]),t._v(" "),e("h3",{attrs:{id:"type-safeなstore"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-safeなstore"}},[t._v("#")]),t._v(" type safeなstore")]),t._v(" "),e("p",[t._v("Vuex+TypeScript問題に足突っ込む")])])}),[],!1,null,null,null);s.default=n.exports}}]);